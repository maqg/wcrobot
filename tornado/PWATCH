#!/bin/sh

#
# rc.pwatch [start|stop] [daemon]
# restart it when exceptions occurs.  
#

getpid()
{
	DAEMON="$1"
	pids=$(ps ax | grep "$DAEMON" | grep -v grep | awk -F' ' '{print $1}')
	echo $pids
}

do_log()
{
	echo `date`" $1 $2" >> $LOG_FILE

	FILESIZE=$(ls $LOG_FILE -l | awk -F' ' '{ print $5 }')
	
	if [ $FILESIZE -gt 4096 ]; then
		cat /dev/null > $LOG_FILE
		echo `date`" $1 $2" >> $LOG_FILE
	fi
}

kill_proc_by_pid()
{
	PIDS=$1
	if test -n "$PIDS"; then
		if kill -0 $PIDS 1>/dev/null 2>/dev/null; then
			kill -9 $PIDS 1>/dev/null 2>/dev/null
		fi
	fi
}

kill_main_process()
{
	if [ ! -f $DAEMON_MAIN_PID_FILE ]; then
		return 0;
	fi

	PIDS=$(cat $DAEMON_MAIN_PID_FILE)
	if test -n "$PIDS"; then
		kill -9 $PIDS >/dev/null 2>&1
	fi

	rm -rf $DAEMON_MAIN_PID_FILE
}

check_proc_exist()
{
	PROC_PID_FILE=$1
	PROC_NAME=$2

	if test -r "$PROC_PID_FILE"; then
		PIDS=`cat $PROC_PID_FILE`
	else
		return 1
	fi

	if [ "$PROC_NAME" = "" ]; then
		echo "PROC name can't be NULL"
		return 0;
	fi

	if test -n "$PIDS"; then
		# sometimes,this pid doesn't match this program
		# so we must do some check
		NEWPID=`$PS | grep $PROC_NAME | grep $PIDS | awk -F' ' '{print $1}'`
		if [ "$NEWPID" = "" ]; then
			return 1
		fi
		if /bin/kill -0 $PIDS >/dev/null 2>&1; then
			echo "The process $PROC_NAME($PIDS) already exists."			
			return 0
		fi 
		rm -f $PROC_PID_FILE
	fi

	return 1
}

usage()
{
	echo "usage: (start|stop) (daemon message)"
}

my_exit()
{
	echo "receive a sigal TERM , rm pid file"
	rm -f $DAEMON_WATCH_PID_FILE 
	rm -f $DAEMON_MAIN_PID_FILE 
	exit 1;
}

mywait()
{
	if [ "$1" = "" ]; then
		echo "para is NULL"
		return 1
	fi

	if $PIDOF $1 1>/dev/null 2>&1; then
		sleep 5
		mywait $1
	else
		return 1
	fi
}

#
# prepare to start
#

OCT_SYSTEM=

if [ "$OCT_SYSTEM" = "" ]; then
	PIDOF=getpid
	SYSTEM=`pwd`
else
	SYSTEM=/OCT/var/
	PIDOF=getpid
fi


RUN_DIR=$SYSTEM/var
LOG_FILE=$SYSTEM/logs/pwatching.log

mkdir -p $SYSTEM/var
mkdir -p $SYSTEM/logs

if test $# -lt 2 ;then
	usage
	exit 1;
fi

OPERATION=$1
DAEMON="$2"

DAEMON_PATH=$(echo "$DAEMON" | awk -F' ' '{ print $1 }')
DAEMON_NAME=$(echo $DAEMON | sed 's/\//_/g' | sed 's/ //g' | sed 's/://g')
#DAEMON_NAME=${DAEMON_PATH##*/} 
DAEMON_WATCH_PID_FILE=$RUN_DIR/"$DAEMON_NAME"watch.pid
DAEMON_MAIN_PID_FILE=$RUN_DIR/"$DAEMON_NAME"main.pid

UNAME=`uname -a`

if echo $UNAME | grep arm > /dev/null; then
	SYSTEM="arm"
	PS=ps
else
	SYSTEM="x86"
	PS="ps ax"
fi

case $OPERATION in
start)
	# check executability
	if [ ! -x $DAEMON_PATH ]; then
		echo "error, $DAEMON_PATH can't be executed"
		exit 1
	fi

	if check_proc_exist $DAEMON_WATCH_PID_FILE $DAEMON_NAME; then
		echo "error, $DAEMON_PATH already existed"
		exit 1;
	fi

	(
		trap "my_exit" 2 3 9 15 
		while :
		do
			$DAEMON &

			echo `$PIDOF $DAEMON_PATH > $DAEMON_WATCH_PID_FILE`
			do_log $DAEMON_NAME "started"

			wait

			echo "`date`: $DAEMON_NAME terminated,reborn it..."
			do_log $DAEMON_NAME "restarted"
			sleep 5
		done
	) &
	echo "$!" > $DAEMON_MAIN_PID_FILE

	sleep 1

	;;
stop)
	do_log $DAEMON_NAME "stopped"
	if test -f $DAEMON_WATCH_PID_FILE; then
		PIDS=`cat $DAEMON_WATCH_PID_FILE`
		rm -f $DAEMON_WATCH_PID_FILE
		kill_proc_by_pid $PIDS
	else
		echo "$DAEMON_WATCH_PID_FILE not exist"
	fi

	kill_main_process $DAEMON_NAME
	exit 1

	;;
esac
